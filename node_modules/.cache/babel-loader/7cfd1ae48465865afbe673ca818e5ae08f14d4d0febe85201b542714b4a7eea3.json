{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zhayl\\\\OneDrive - Astana IT University\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Front_diplom\\\\frontend\\\\src\\\\pages\\\\SendOTP.jsx\",\n  _s = $RefreshSig$();\n// import React, {useState} from \"react\";\n// import axios from \"axios\";\n\n// const SendOTP = ({setStep, setEmail}) =>{\n//     const [email, setLocalEmail] = useState(\"\");\n//     const [loading, setLoading] = useState(false);\n//     const [message, setMessage] = useState(\"\");\n\n//     const handleSendOTP = async () =>{\n//         if(!email){\n//             setMessage(\"Введите email!\");\n//             return;\n//         }\n\n//         try{\n//             setLoading(true);\n//             const response = await axios.post(\"http://localhost:5000/api/send-otp\", {email});\n//             setMessage(response.data.message);\n//             setEmail(email); // Передаем email в родительский компонент\n//             setStep(2); // Переход на ввод OTP\n//         }catch (error){\n//             setMessage(error.response?.data?.message || \"Ошибка отправки OTP\");\n//         }finally{\n//             setLoading(false);\n//         }\n//     };\n\n//     return (\n//         <div>\n//         <h2>Введите ваш email</h2>\n//         <input\n//             type=\"email\"\n//             value={localEmail}\n//             onChange={(e) => setLocalEmail(e.target.value)}\n//             placeholder=\"Ваш email\"\n//         />\n//         <button onClick={handleSendOTP} disabled={loading}>\n//             {loading ? \"Отправка...\" : \"Получить OTP\"}\n//         </button>\n//         {message && <p>{message}</p>}\n//     </div>\n//     );\n// }\n\n// export default SendOTP;\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SendOTP = ({\n  setStep,\n  setEmail\n}) => {\n  _s();\n  const [email, setEmailLocal] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const handleSendOTP = async () => {\n    if (!email) {\n      setMessage(\"Введите email!\");\n      return;\n    }\n    try {\n      setLoading(true);\n      const response = await axios.post(\"http://localhost:5000/api/send-otp\", {\n        email\n      });\n      setMessage(response.data.message);\n      setEmail(email); // Передаем email в родительский компонент\n      setStep(2); // Переход на ввод OTP\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Ошибка отправки OTP\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmailLocal(e.target.value),\n      placeholder: \"\\u0412\\u0430\\u0448 email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendOTP,\n      disabled: loading,\n      children: loading ? \"Отправка...\" : \"Получить OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(SendOTP, \"ZFZbXMrW2UXDTnfyJv15lADsX7g=\");\n_c = SendOTP;\nexport default SendOTP;\nvar _c;\n$RefreshReg$(_c, \"SendOTP\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","SendOTP","setStep","setEmail","_s","email","setEmailLocal","loading","setLoading","message","setMessage","handleSendOTP","response","post","data","error","_error$response","_error$response$data","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/zhayl/OneDrive - Astana IT University/Рабочий стол/Front_diplom/frontend/src/pages/SendOTP.jsx"],"sourcesContent":["// import React, {useState} from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const SendOTP = ({setStep, setEmail}) =>{\r\n//     const [email, setLocalEmail] = useState(\"\");\r\n//     const [loading, setLoading] = useState(false);\r\n//     const [message, setMessage] = useState(\"\");\r\n\r\n\r\n//     const handleSendOTP = async () =>{\r\n//         if(!email){\r\n//             setMessage(\"Введите email!\");\r\n//             return;\r\n//         }\r\n\r\n//         try{\r\n//             setLoading(true);\r\n//             const response = await axios.post(\"http://localhost:5000/api/send-otp\", {email});\r\n//             setMessage(response.data.message);\r\n//             setEmail(email); // Передаем email в родительский компонент\r\n//             setStep(2); // Переход на ввод OTP\r\n//         }catch (error){\r\n//             setMessage(error.response?.data?.message || \"Ошибка отправки OTP\");\r\n//         }finally{\r\n//             setLoading(false);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//         <h2>Введите ваш email</h2>\r\n//         <input\r\n//             type=\"email\"\r\n//             value={localEmail}\r\n//             onChange={(e) => setLocalEmail(e.target.value)}\r\n//             placeholder=\"Ваш email\"\r\n//         />\r\n//         <button onClick={handleSendOTP} disabled={loading}>\r\n//             {loading ? \"Отправка...\" : \"Получить OTP\"}\r\n//         </button>\r\n//         {message && <p>{message}</p>}\r\n//     </div>\r\n//     );\r\n// }\r\n\r\n// export default SendOTP;\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst SendOTP = ({ setStep, setEmail }) => {\r\n    const [email, setEmailLocal] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const handleSendOTP = async () => {\r\n        if (!email) {\r\n            setMessage(\"Введите email!\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            const response = await axios.post(\"http://localhost:5000/api/send-otp\", { email });\r\n            setMessage(response.data.message);\r\n            setEmail(email); // Передаем email в родительский компонент\r\n            setStep(2); // Переход на ввод OTP\r\n        } catch (error) {\r\n            setMessage(error.response?.data?.message || \"Ошибка отправки OTP\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Введите ваш email</h2>\r\n            <input\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmailLocal(e.target.value)}\r\n                placeholder=\"Ваш email\"\r\n            />\r\n            <button onClick={handleSendOTP} disabled={loading}>\r\n                {loading ? \"Отправка...\" : \"Получить OTP\"}\r\n            </button>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SendOTP;\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACN,KAAK,EAAE;MACRK,UAAU,CAAC,gBAAgB,CAAC;MAC5B;IACJ;IAEA,IAAI;MACAF,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMI,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,oCAAoC,EAAE;QAAER;MAAM,CAAC,CAAC;MAClFK,UAAU,CAACE,QAAQ,CAACE,IAAI,CAACL,OAAO,CAAC;MACjCN,QAAQ,CAACE,KAAK,CAAC,CAAC,CAAC;MACjBH,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOa,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACZP,UAAU,CAAC,EAAAM,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBR,OAAO,KAAI,qBAAqB,CAAC;IACtE,CAAC,SAAS;MACND,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,oBACIR,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BtB,OAAA;MACIuB,IAAI,EAAC,OAAO;MACZC,KAAK,EAAEnB,KAAM;MACboB,QAAQ,EAAGC,CAAC,IAAKpB,aAAa,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,WAAW,EAAC;IAAW;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFtB,OAAA;MAAQ6B,OAAO,EAAElB,aAAc;MAACmB,QAAQ,EAAEvB,OAAQ;MAAAW,QAAA,EAC7CX,OAAO,GAAG,aAAa,GAAG;IAAc;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EACRb,OAAO,iBAAIT,OAAA;MAAAkB,QAAA,EAAIT;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEd,CAAC;AAAClB,EAAA,CAvCIH,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AAyCb,eAAeA,OAAO;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}